%sherpaTTIKAcc.m
%author: wreid
%date: 20150123

function qDotDot = sherpaTTIKAcc(uDotDot,qDot,q,kC)
%sherpaTTFKAcc Sherpa_TT single leg forward acceleration kinematics.

    alpha = q(1);
    beta = q(2);
    gamma = q(3);
    
    alphaDot = qDot(1);
    betaDot = qDot(2);
    gammaDot = qDot(3);
    
    xDotDot = uDotDot(1);
    yDotDot = uDotDot(2);
    zDotDot = uDotDot(3);
    
    qDotDot = [((cos(gamma + kC.zeta)*sin(gamma + kC.zeta)*sin(alpha)*kC.l5^2 - cos(beta)*sin(alpha)*sin(beta)*kC.l3^2)*(conj(xDotDot) + conj(alphaDot)*sin(alpha)*(kC.l2 - kC.l7 + kC.l5*cos(gamma + kC.zeta) + kC.l3*cos(beta) + kC.l4*cos(kC.zeta)) + kC.l3*cos(alpha)*conj(betaDot)*sin(beta) + kC.l5*sin(gamma + kC.zeta)*cos(alpha)*conj(gammaDot)))/(kC.l3^3*cos(beta)^2*sin(alpha)^2*sin(beta) - kC.l5^3*cos(gamma + kC.zeta)^2*sin(gamma + kC.zeta)*sin(alpha)^2 + kC.l2*kC.l3^2*cos(beta)*sin(alpha)^2*sin(beta) - kC.l3^2*kC.l7*cos(beta)*sin(alpha)^2*sin(beta) - kC.l3*kC.l5^2*cos(gamma + kC.zeta)^2*cos(alpha)^2*sin(beta) + kC.l3^2*kC.l5*sin(gamma + kC.zeta)*cos(alpha)^2*cos(beta)^2 - kC.l2*kC.l5^2*cos(gamma + kC.zeta)*sin(gamma + kC.zeta)*sin(alpha)^2 + kC.l5^2*kC.l7*cos(gamma + kC.zeta)*sin(gamma + kC.zeta)*sin(alpha)^2 + kC.l3^2*kC.l4*cos(beta)*sin(alpha)^2*sin(beta)*cos(kC.zeta) + kC.l3*kC.l5^2*cos(gamma + kC.zeta)*sin(gamma + kC.zeta)*cos(alpha)^2*cos(beta) - kC.l3*kC.l5^2*cos(gamma + kC.zeta)*sin(gamma + kC.zeta)*cos(beta)*sin(alpha)^2 - kC.l3^2*kC.l5*cos(gamma + kC.zeta)*cos(alpha)^2*cos(beta)*sin(beta) - kC.l4*kC.l5^2*cos(gamma + kC.zeta)*sin(gamma + kC.zeta)*sin(alpha)^2*cos(kC.zeta) + kC.l3^2*kC.l5*cos(gamma + kC.zeta)*cos(beta)*sin(alpha)^2*sin(beta) - kC.l2*kC.l3*kC.l5*cos(gamma + kC.zeta)*cos(alpha)^2*sin(beta) + kC.l2*kC.l3*kC.l5*sin(gamma + kC.zeta)*cos(alpha)^2*cos(beta) + kC.l3*kC.l5*kC.l7*cos(gamma + kC.zeta)*cos(alpha)^2*sin(beta) - kC.l3*kC.l5*kC.l7*sin(gamma + kC.zeta)*cos(alpha)^2*cos(beta) - kC.l3*kC.l4*kC.l5*cos(gamma + kC.zeta)*cos(alpha)^2*sin(beta)*cos(kC.zeta) + kC.l3*kC.l4*kC.l5*sin(gamma + kC.zeta)*cos(alpha)^2*cos(beta)*cos(kC.zeta)) - ((kC.l3*kC.l5*cos(gamma + kC.zeta)*cos(alpha)*sin(beta) - kC.l3*kC.l5*sin(gamma + kC.zeta)*cos(alpha)*cos(beta))*(conj(yDotDot) - conj(alphaDot)*cos(alpha)*(kC.l2 - kC.l7 + kC.l5*cos(gamma + kC.zeta) + kC.l3*cos(beta) + kC.l4*cos(kC.zeta)) + kC.l3*conj(betaDot)*sin(alpha)*sin(beta) + kC.l5*cos(gamma + kC.zeta)*conj(gammaDot)*sin(alpha)))/(kC.l3^3*cos(beta)^2*sin(alpha)^2*sin(beta) - kC.l5^3*cos(gamma + kC.zeta)^2*sin(gamma + kC.zeta)*sin(alpha)^2 + kC.l2*kC.l3^2*cos(beta)*sin(alpha)^2*sin(beta) - kC.l3^2*kC.l7*cos(beta)*sin(alpha)^2*sin(beta) - kC.l3*kC.l5^2*cos(gamma + kC.zeta)^2*cos(alpha)^2*sin(beta) + kC.l3^2*kC.l5*sin(gamma + kC.zeta)*cos(alpha)^2*cos(beta)^2 - kC.l2*kC.l5^2*cos(gamma + kC.zeta)*sin(gamma + kC.zeta)*sin(alpha)^2 + kC.l5^2*kC.l7*cos(gamma + kC.zeta)*sin(gamma + kC.zeta)*sin(alpha)^2 + kC.l3^2*kC.l4*cos(beta)*sin(alpha)^2*sin(beta)*cos(kC.zeta) + kC.l3*kC.l5^2*cos(gamma + kC.zeta)*sin(gamma + kC.zeta)*cos(alpha)^2*cos(beta) - kC.l3*kC.l5^2*cos(gamma + kC.zeta)*sin(gamma + kC.zeta)*cos(beta)*sin(alpha)^2 - kC.l3^2*kC.l5*cos(gamma + kC.zeta)*cos(alpha)^2*cos(beta)*sin(beta) - kC.l4*kC.l5^2*cos(gamma + kC.zeta)*sin(gamma + kC.zeta)*sin(alpha)^2*cos(kC.zeta) + kC.l3^2*kC.l5*cos(gamma + kC.zeta)*cos(beta)*sin(alpha)^2*sin(beta) - kC.l2*kC.l3*kC.l5*cos(gamma + kC.zeta)*cos(alpha)^2*sin(beta) + kC.l2*kC.l3*kC.l5*sin(gamma + kC.zeta)*cos(alpha)^2*cos(beta) + kC.l3*kC.l5*kC.l7*cos(gamma + kC.zeta)*cos(alpha)^2*sin(beta) - kC.l3*kC.l5*kC.l7*sin(gamma + kC.zeta)*cos(alpha)^2*cos(beta) - kC.l3*kC.l4*kC.l5*cos(gamma + kC.zeta)*cos(alpha)^2*sin(beta)*cos(kC.zeta) + kC.l3*kC.l4*kC.l5*sin(gamma + kC.zeta)*cos(alpha)^2*cos(beta)*cos(kC.zeta)) - ((kC.l5^2*sin(gamma + kC.zeta)^2*cos(alpha)*sin(alpha) - kC.l3^2*cos(alpha)*sin(alpha)*sin(beta)^2)*(conj(zDotDot) + kC.l5*cos(gamma + kC.zeta)*conj(gammaDot) + kC.l3*conj(betaDot)*cos(beta)))/(kC.l3^3*cos(beta)^2*sin(alpha)^2*sin(beta) - kC.l5^3*cos(gamma + kC.zeta)^2*sin(gamma + kC.zeta)*sin(alpha)^2 + kC.l2*kC.l3^2*cos(beta)*sin(alpha)^2*sin(beta) - kC.l3^2*kC.l7*cos(beta)*sin(alpha)^2*sin(beta) - kC.l3*kC.l5^2*cos(gamma + kC.zeta)^2*cos(alpha)^2*sin(beta) + kC.l3^2*kC.l5*sin(gamma + kC.zeta)*cos(alpha)^2*cos(beta)^2 - kC.l2*kC.l5^2*cos(gamma + kC.zeta)*sin(gamma + kC.zeta)*sin(alpha)^2 + kC.l5^2*kC.l7*cos(gamma + kC.zeta)*sin(gamma + kC.zeta)*sin(alpha)^2 + kC.l3^2*kC.l4*cos(beta)*sin(alpha)^2*sin(beta)*cos(kC.zeta) + kC.l3*kC.l5^2*cos(gamma + kC.zeta)*sin(gamma + kC.zeta)*cos(alpha)^2*cos(beta) - kC.l3*kC.l5^2*cos(gamma + kC.zeta)*sin(gamma + kC.zeta)*cos(beta)*sin(alpha)^2 - kC.l3^2*kC.l5*cos(gamma + kC.zeta)*cos(alpha)^2*cos(beta)*sin(beta) - kC.l4*kC.l5^2*cos(gamma + kC.zeta)*sin(gamma + kC.zeta)*sin(alpha)^2*cos(kC.zeta) + kC.l3^2*kC.l5*cos(gamma + kC.zeta)*cos(beta)*sin(alpha)^2*sin(beta) - kC.l2*kC.l3*kC.l5*cos(gamma + kC.zeta)*cos(alpha)^2*sin(beta) + kC.l2*kC.l3*kC.l5*sin(gamma + kC.zeta)*cos(alpha)^2*cos(beta) + kC.l3*kC.l5*kC.l7*cos(gamma + kC.zeta)*cos(alpha)^2*sin(beta) - kC.l3*kC.l5*kC.l7*sin(gamma + kC.zeta)*cos(alpha)^2*cos(beta) - kC.l3*kC.l4*kC.l5*cos(gamma + kC.zeta)*cos(alpha)^2*sin(beta)*cos(kC.zeta) + kC.l3*kC.l4*kC.l5*sin(gamma + kC.zeta)*cos(alpha)^2*cos(beta)*cos(kC.zeta));
kC.l5*sin(gamma + kC.zeta)*cos(alpha)^2 + kC.l3*sin(beta)*sin(alpha)^2)*(conj(zDotDot) + kC.l5*cos(gamma + kC.zeta)*conj(gammaDot) + kC.l3*conj(betaDot)*cos(beta)))/(kC.l5^2*cos(gamma + kC.zeta)*sin(gamma + kC.zeta)*sin(alpha)^2 - kC.l3^2*cos(beta)*sin(alpha)^2*sin(beta) + kC.l3*kC.l5*cos(gamma + kC.zeta)*cos(alpha)^2*sin(beta) - kC.l3*kC.l5*sin(gamma + kC.zeta)*cos(alpha)^2*cos(beta)) - (kC.l5*cos(gamma + kC.zeta)*cos(alpha)*(conj(xDotDot) + conj(alphaDot)*sin(alpha)*(kC.l2 - kC.l7 + kC.l5*cos(gamma + kC.zeta) + kC.l3*cos(beta) + kC.l4*cos(kC.zeta)) + kC.l3*cos(alpha)*conj(betaDot)*sin(beta) + kC.l5*sin(gamma + kC.zeta)*cos(alpha)*conj(gammaDot)))/(kC.l5^2*cos(gamma + kC.zeta)*sin(gamma + kC.zeta)*sin(alpha)^2 - kC.l3^2*cos(beta)*sin(alpha)^2*sin(beta) + kC.l3*kC.l5*cos(gamma + kC.zeta)*cos(alpha)^2*sin(beta) - kC.l3*kC.l5*sin(gamma + kC.zeta)*cos(alpha)^2*cos(beta)) - (kC.l5*cos(gamma + kC.zeta)*sin(alpha)*(conj(yDotDot) - conj(alphaDot)*cos(alpha)*(kC.l2 - kC.l7 + kC.l5*cos(gamma + kC.zeta) + kC.l3*cos(beta) + kC.l4*cos(kC.zeta)) + kC.l3*conj(betaDot)*sin(alpha)*sin(beta) + kC.l5*cos(gamma + kC.zeta)*conj(gammaDot)*sin(alpha)))/(kC.l5^2*cos(gamma + kC.zeta)*sin(gamma + kC.zeta)*sin(alpha)^2 - kC.l3^2*cos(beta)*sin(alpha)^2*sin(beta) + kC.l3*kC.l5*cos(gamma + kC.zeta)*cos(alpha)^2*sin(beta) - kC.l3*kC.l5*sin(gamma + kC.zeta)*cos(alpha)^2*cos(beta));
kC.l3*cos(alpha)*cos(beta)*(conj(xDotDot) + conj(alphaDot)*sin(alpha)*(kC.l2 - kC.l7 + kC.l5*cos(gamma + kC.zeta) + kC.l3*cos(beta) + kC.l4*cos(kC.zeta)) + kC.l3*cos(alpha)*conj(betaDot)*sin(beta) + kC.l5*sin(gamma + kC.zeta)*cos(alpha)*conj(gammaDot)))/(kC.l5^2*cos(gamma + kC.zeta)*sin(gamma + kC.zeta)*sin(alpha)^2 - kC.l3^2*cos(beta)*sin(alpha)^2*sin(beta) + kC.l3*kC.l5*cos(gamma + kC.zeta)*cos(alpha)^2*sin(beta) - kC.l3*kC.l5*sin(gamma + kC.zeta)*cos(alpha)^2*cos(beta)) - ((kC.l3*sin(beta)*cos(alpha)^2 + kC.l5*sin(gamma + kC.zeta)*sin(alpha)^2)*(conj(zDotDot) + kC.l5*cos(gamma + kC.zeta)*conj(gammaDot) + kC.l3*conj(betaDot)*cos(beta)))/(kC.l5^2*cos(gamma + kC.zeta)*sin(gamma + kC.zeta)*sin(alpha)^2 - kC.l3^2*cos(beta)*sin(alpha)^2*sin(beta) + kC.l3*kC.l5*cos(gamma + kC.zeta)*cos(alpha)^2*sin(beta) - kC.l3*kC.l5*sin(gamma + kC.zeta)*cos(alpha)^2*cos(beta)) + (kC.l3*cos(beta)*sin(alpha)*(conj(yDotDot) - conj(alphaDot)*cos(alpha)*(kC.l2 - kC.l7 + kC.l5*cos(gamma + kC.zeta) + kC.l3*cos(beta) + kC.l4*cos(kC.zeta)) + kC.l3*conj(betaDot)*sin(alpha)*sin(beta) + kC.l5*cos(gamma + kC.zeta)*conj(gammaDot)*sin(alpha)))/(kC.l5^2*cos(gamma + kC.zeta)*sin(gamma + kC.zeta)*sin(alpha)^2 - kC.l3^2*cos(beta)*sin(alpha)^2*sin(beta) + kC.l3*kC.l5*cos(gamma + kC.zeta)*cos(alpha)^2*sin(beta) - kC.l3*kC.l5*sin(gamma + kC.zeta)*cos(alpha)^2*cos(beta))];
 
      
end